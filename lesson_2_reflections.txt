What happens when you initialize a repository? Why do you need to do it?

- When you initialize a repository git initializes an empty repository without any
commits in it.  I guess you need to do it because it is the first step in
creating a new repository.  I'm not actually sure I understand the second part
of the question.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

- The staging area is different from the working directory and the repository as
it is an intermediate "holding area" for changes that that you want to commit to
your repository, but not necessarily all of the files that you have been
working on at the same time.

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
