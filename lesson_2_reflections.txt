*** From Udacity course on using Git and Github.

What happens when you initialize a repository? Why do you need to do it?

- When you initialize a repository git initializes an empty repository without any
commits in it.  I guess you need to do it because it is the first step in
creating a new repository.  I'm not actually sure I understand the second part
of the question.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

- The staging area is different from the working directory and the repository as
it is an intermediate "holding area" for changes that that you want to commit to
your repository, but not necessarily all of the files that you have been
working on at the same time.

How can you use the staging area to make sure you have one commit per logical
change?

- By only adding the files to the staging area that you want to commit. The
files that you do not want to be a part of the commit will not be affected and
you can add them later as different commits.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

- When working on something that you don't necessarily want to be a part of the
main project like something you are experimenting with.

How do the diagrams help you visualize the branch structure?

- They allow you to better conceptualize what the branch represents as well as
better understand how the commits and history are associated.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

- The commits from both branches are added to the merged branch and the head of
merged branch becomes the latest commit.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

- The pros of automatic merging is that is takes out any guess work that you
while the pros of manually merging are that you have an opportunity to review
what is being merged.  The cons of automatic merging are that you don't always
know what might be being merged while the cons for the manual approach is that
it can be difficult and time-consuming, especially if you aren't familiar with
what someone else has done.
